// <auto-generated />
using System;
using EducationCenterCRM.DAL.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EducationCenterCRM.DAL.EF.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210920195211_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EducationCenterCRM.BLL.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9565550c-5828-4df4-bdd4-0e17d7653a93"),
                            BirthDate = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vasilii",
                            Gender = 0,
                            LastName = "Petrov",
                            StartDate = new DateTime(2021, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("e436725f-6c70-4832-8855-9fb7ed1085c8")
                        },
                        new
                        {
                            Id = new Guid("8acd2498-140f-4e30-9f58-9c91a4910650"),
                            BirthDate = new DateTime(1998, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Petr",
                            Gender = 0,
                            LastName = "Vasiliev",
                            StartDate = new DateTime(2021, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("e436725f-6c70-4832-8855-9fb7ed1085c8")
                        },
                        new
                        {
                            Id = new Guid("32a754ba-87ff-4f02-b740-e093e00be8b6"),
                            BirthDate = new DateTime(1989, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ivan",
                            Gender = 0,
                            LastName = "Bezfamilnyi",
                            StartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("b6aec2a4-2b4e-4234-8b70-2cac027e5047")
                        },
                        new
                        {
                            Id = new Guid("a32f674b-7fd7-4890-a452-56977d07d135"),
                            BirthDate = new DateTime(1989, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mariya",
                            Gender = 1,
                            LastName = "Sidorova",
                            StartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("b6aec2a4-2b4e-4234-8b70-2cac027e5047")
                        },
                        new
                        {
                            Id = new Guid("67e403c0-ac99-4383-9f4b-99477765e16c"),
                            BirthDate = new DateTime(1989, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vitali",
                            Gender = 0,
                            LastName = "Lukyanov",
                            StartDate = new DateTime(2021, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("4422e69a-3936-4385-9b61-7722a68c3000")
                        },
                        new
                        {
                            Id = new Guid("7dc77f20-2bf5-41f2-952c-a38482d7a9b2"),
                            BirthDate = new DateTime(1995, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Elvira",
                            Gender = 0,
                            LastName = "Zaytseva",
                            StartDate = new DateTime(2021, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentGroupId = new Guid("4422e69a-3936-4385-9b61-7722a68c3000")
                        });
                });

            modelBuilder.Entity("EducationCenterCRM.BLL.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e436725f-6c70-4832-8855-9fb7ed1085c8"),
                            TeacherId = new Guid("69c233e8-2438-487d-8183-20fbc3508e68"),
                            Title = "ASP_21-1"
                        },
                        new
                        {
                            Id = new Guid("b6aec2a4-2b4e-4234-8b70-2cac027e5047"),
                            TeacherId = new Guid("51a5dee2-a947-4b73-96a4-2baa4c5ab0dd"),
                            Title = "ASP_21-2"
                        },
                        new
                        {
                            Id = new Guid("4422e69a-3936-4385-9b61-7722a68c3000"),
                            TeacherId = new Guid("4bb55f0e-548a-45d0-8ffc-1811001090e1"),
                            Title = "JS_21-1"
                        });
                });

            modelBuilder.Entity("EducationCenterCRM.BLL.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkToProfile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69c233e8-2438-487d-8183-20fbc3508e68"),
                            Bio = "Some information",
                            BirthDate = new DateTime(1986, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Petr",
                            Gender = 0,
                            LastName = "Reshetnikov",
                            LinkToProfile = "https://www.linkedin.com/feed/"
                        },
                        new
                        {
                            Id = new Guid("51a5dee2-a947-4b73-96a4-2baa4c5ab0dd"),
                            Bio = "Some other information",
                            BirthDate = new DateTime(1989, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mikhail",
                            Gender = 0,
                            LastName = "Andreev",
                            LinkToProfile = "https://www.linkedin.com/feed/"
                        },
                        new
                        {
                            Id = new Guid("4bb55f0e-548a-45d0-8ffc-1811001090e1"),
                            Bio = "Some other information",
                            BirthDate = new DateTime(1989, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Natalia",
                            Gender = 1,
                            LastName = "Usovich",
                            LinkToProfile = "https://www.linkedin.com/feed/"
                        });
                });

            modelBuilder.Entity("EducationCenterCRM.BLL.Models.Student", b =>
                {
                    b.HasOne("EducationCenterCRM.BLL.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("EducationCenterCRM.BLL.Models.StudentGroup", b =>
                {
                    b.HasOne("EducationCenterCRM.BLL.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
