@using EducationCenterCRM.MVC.Models
@model EducationCenterCRM.MVC.Models.MarkModel

@{
    ViewData["Title"] = "Add mark";
}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Lesson</h4>
</div>

<dt class="col-sm-2">
    @Html.DisplayNameFor(model => model.Lesson.LessonDate)
</dt>
<dd class="col-sm-10">
    @Html.DisplayFor(model => model.Lesson.LessonDate)
</dd>

<dt class="col-sm-2">
    @Html.DisplayNameFor(model => model.Lesson.Group)
</dt>
<dd class="col-sm-10">
    @Html.DisplayFor(model => model.Lesson.Group.Title)
</dd>

<hr>
<div>
    <h4>Student</h4>
</div>

<dt class="col-sm-2">
    @Html.DisplayNameFor(model => model.Student)
</dt>
<dd class="col-sm-10">
    @Html.DisplayFor(model => model.Student.FullName)
</dd>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action=EditScore>

            <input type="hidden" asp-for="LessonId" class="form-control" />
            <input type="hidden" asp-for="StudentId" class="form-control" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Score" class="control-label"></label>
                <input asp-for="Score" class="form-control" />
                <span asp-validation-for="Score" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Lessons" asp-action="Edit" asp-route-id="@Model.LessonId">Back to lesson</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

